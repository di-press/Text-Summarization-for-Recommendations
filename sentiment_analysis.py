#código oficial que funcionou para gerar analise de sentimento em xml
#cada xml gerado representa a análise sentimental de uma única review
#as reviews são guardadas dentro uma "pasta-mãe"; é preciso colocar cada review manualmente dentro 
#da pasta respectiva à review. Ex: colocar os x2145_1.xml até x2145_10.xml dentro da pasta 2145

#ATÉ O 3394 JA FOI PROCESSADO!
#DO 3395 até 4545 foi processado
#4546 até 5439 foi processado 
#de 5441 até 6560 foi processado
#de 6561até 7149
#5292 itens em 7,3 horas


#no terminal, entrar no environment sumarizationpaper 
#dar cd na pasta "stanford-corenlp-4.0.0"
#digitar o comando java -mx2g -cp "*" edu.stanford.nlp.pipeline.StanfordCoreNLPServer -timeout 50000
#verificar se a porta gerada é 9000
import os
from pycorenlp import StanfordCoreNLP
import string
import time

inicio = time.perf_counter()

nlp = StanfordCoreNLP('http://localhost:9000')

# old tests:
#directory_path = "C:\\Users\\User\\Desktop\\ic\\Reviews\\reviews HetRec\\Hetrec_reviews\\Separated Reviews\\corenlpteste"
#directory_path = "C:\\Users\\User\\Desktop\\ic\\Reviews\\reviews HetRec\\Hetrec_reviews\\Separated Reviews\\Separated Reviews"

# directory_path is the directory containing the separated reviews in the reviews database:
directory_path = "C:\\Users\\User\\Desktop\\ic\\Reviews\\reviews HetRec\\Hetrec_reviews\\Separated Reviews\\dataset_a_ser_processado"

for file in os.listdir(directory_path):

    current_file = os.path.join(directory_path, file)

    review_text = ""
    with open(current_file, encoding='utf8') as f: 
        res = f.readlines() 
        review_text += "".join(res)

    # file_name is the name of the files that are going to be generated by the CoreNLP 
    # sentiment analysis library:

    file_name = "x" + file[0 : -3] + "xml"

    # timeout: tmepo de espera do servidor
    res = nlp.annotate(review_text,
                    properties={
                        'annotators': 'sentiment',
                        'outputFormat': 'xml',
                        'timeout': 50000, 
                    })


    with open(file_name, 'w', encoding="utf-8") as f:
        print(res, file=f)


fim = time.perf_counter()
        
print("Tempo decorrido: ", fim-inicio)